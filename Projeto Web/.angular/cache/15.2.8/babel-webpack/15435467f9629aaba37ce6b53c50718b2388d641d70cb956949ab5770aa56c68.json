{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DoarComponent = class DoarComponent {\n  constructor(doacaoService, doadorService, enderecoService, produtoService) {\n    this.doacaoService = doacaoService;\n    this.doadorService = doadorService;\n    this.enderecoService = enderecoService;\n    this.produtoService = produtoService;\n    this.doacao = {\n      id: 0,\n      doador: {\n        id: 0,\n        nome: '',\n        email: '',\n        telefone: '',\n        cpf: '',\n        endereco: {\n          id: 0,\n          cep: '',\n          logradouro: '',\n          bairro: '',\n          uf: ''\n        }\n      },\n      produto: [],\n      doacaoRecolhida: false,\n      localDate: ''\n    };\n    this.itens = [{\n      id: 1,\n      nome: 'Arroz',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 2,\n      nome: 'Feijão',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 3,\n      nome: 'Macarrão',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 4,\n      nome: 'Açúcar',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 5,\n      nome: 'Farinha de trigo',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 6,\n      nome: 'Óleo de soja',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 7,\n      nome: 'Milho enlatado',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 8,\n      nome: 'Ervilha enlatada',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 9,\n      nome: 'Leite em pó',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 10,\n      nome: 'Café',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 11,\n      nome: 'Sardinha em lata',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 12,\n      nome: 'Molho de tomate',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 13,\n      nome: 'Sal',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 14,\n      nome: 'Farinha de mandioca',\n      selecionado: false,\n      quantidade: 1\n    }, {\n      id: 15,\n      nome: 'Macarrão instantâneo',\n      selecionado: false,\n      quantidade: 1\n    }];\n  }\n  salvarDoacao() {\n    this.itens;\n    this.doacaoService.registrarDoacao(this.doacao).subscribe({\n      next: response => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: error => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n  encontrarDoadorPorCpf(cpf) {\n    this.doadorService.getDoadorByCpf(cpf).subscribe({\n      next: response => {\n        console.log('Doador encontrado!', response);\n      },\n      error: error => {\n        console.error('Erro ao buscar doador', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n  salvarDoador() {\n    this.doadorService.registrarDoador(this.doacao.doador).subscribe({\n      next: response => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: error => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n  salvarEndereco(endereco) {\n    this.enderecoService.registrarDoacao(endereco).subscribe({\n      next: response => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: error => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n  salvarProduto() {\n    this.doacao.produto = this.itens;\n    this.produtoService.registrarDoacao(this.doacao.produto).subscribe({\n      next: response => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: error => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n};\nDoarComponent = __decorate([Component({\n  selector: 'app-doar',\n  templateUrl: './doar.component.html',\n  styleUrls: ['./doar.component.css']\n})], DoarComponent);\nexport { DoarComponent };","map":{"version":3,"mappings":"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","names":["Component","DoarComponent","constructor","doacaoService","doadorService","enderecoService","produtoService","id","doador","nome","email","telefone","cpf","endereco","cep","logradouro","bairro","uf","produto","doacaoRecolhida","localDate","selecionado","quantidade","salvarDoacao","itens","registrarDoacao","doacao","subscribe","next","response","console","log","error","complete","encontrarDoadorPorCpf","getDoadorByCpf","salvarDoador","registrarDoador","salvarEndereco","salvarProduto","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Acer\\Documents\\Engenharia de software\\Faculdade de engenharia de software\\ATIVIDADES EXTENSIONISTAS I\\Angular-Project\\projeto-social\\src\\app\\component\\doar\\doar.component.ts"],"sourcesContent":["import { Endereco } from '@app/component/endereco/interface/enderecoInterface';\nimport { Produto } from './../produto/interface/produtoInterface';\nimport { ProdutoService } from './../produto/service/produto.service';\nimport { EnderecoService } from './../endereco/service/endereco.service';\nimport { DoadorService } from './../doador/service/doador.service';\nimport { Component } from '@angular/core';\nimport { Doacao } from './interface/doacaoInterface';\nimport { DoacaoService } from './service/doacao.service';\nimport { Doador } from '../doador/interface/doadorInterface';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-doar',\n  templateUrl: './doar.component.html',\n  styleUrls: ['./doar.component.css'],\n})\nexport class DoarComponent {\n  \n  doacao: Doacao = {\n    id: 0,\n    doador: {\n      id: 0,\n      nome: '',\n      email: '',\n      telefone: '',\n      cpf: '',\n      endereco: {\n        id: 0,\n        cep: '',\n        logradouro: '',\n        bairro: '',\n        uf: ''\n      }\n    },\n    produto: [],\n    doacaoRecolhida: false,\n    localDate: ''\n  };\n\n  constructor(private doacaoService: DoacaoService,\n              private doadorService: DoadorService,\n              private enderecoService: EnderecoService,\n              private produtoService: ProdutoService\n  ) { }\n\n  salvarDoacao(): void {\n    this.itens\n    this.doacaoService.registrarDoacao(this.doacao).subscribe({\n      next: (response) => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: (error) => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n\n  encontrarDoadorPorCpf(cpf: string) {\n    this.doadorService.getDoadorByCpf(cpf).subscribe(\n      {\n        next: (response) =>{\n          console.log('Doador encontrado!', response);\n        },\n        error: (error) => {\n          console.error('Erro ao buscar doador', error);\n        },\n        complete: () => {\n          console.log('Requisição concluída.');\n        }\n      }\n    )\n  }\n\n  salvarDoador(): void {\n    this.doadorService.registrarDoador(this.doacao.doador).subscribe({\n      next: (response) => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: (error) => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n\n  salvarEndereco(endereco: Endereco): void {\n    this.enderecoService.registrarDoacao(endereco).subscribe({\n      next: (response) => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: (error) => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n\n\n  salvarProduto(): void {\n    this.doacao.produto = this.itens\n    this.produtoService.registrarDoacao(this.doacao.produto).subscribe({\n      next: (response) => {\n        console.log('Doação registrada com sucesso!', response);\n      },\n      error: (error) => {\n        console.error('Erro ao registrar a doação', error);\n      },\n      complete: () => {\n        console.log('Requisição concluída.');\n      }\n    });\n  }\n\n\n  itens = [\n    { id: 1, nome: 'Arroz', selecionado: false, quantidade: 1 },\n    { id: 2, nome: 'Feijão', selecionado: false, quantidade: 1 },\n    { id: 3, nome: 'Macarrão', selecionado: false, quantidade: 1 },\n    { id: 4, nome: 'Açúcar', selecionado: false, quantidade: 1 },\n    { id: 5, nome: 'Farinha de trigo', selecionado: false, quantidade: 1 },\n    { id: 6, nome: 'Óleo de soja', selecionado: false, quantidade: 1 },\n    { id: 7, nome: 'Milho enlatado', selecionado: false, quantidade: 1 },\n    { id: 8, nome: 'Ervilha enlatada', selecionado: false, quantidade: 1 },\n    { id: 9, nome: 'Leite em pó', selecionado: false, quantidade: 1 },\n    { id: 10, nome: 'Café', selecionado: false, quantidade: 1 },\n    { id: 11, nome: 'Sardinha em lata', selecionado: false, quantidade: 1 },\n    { id: 12, nome: 'Molho de tomate', selecionado: false, quantidade: 1 },\n    { id: 13, nome: 'Sal', selecionado: false, quantidade: 1 },\n    { id: 14, nome: 'Farinha de mandioca', selecionado: false, quantidade: 1 },\n    { id: 15, nome: 'Macarrão instantâneo', selecionado: false, quantidade: 1 }\n  ];\n}\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}